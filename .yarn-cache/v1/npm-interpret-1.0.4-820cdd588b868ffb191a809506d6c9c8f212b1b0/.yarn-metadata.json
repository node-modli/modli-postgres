{
  "manifest": {
    "name": "interpret",
    "description": "A dictionary of file extensions and associated module loaders.",
    "version": "1.0.4",
    "homepage": "https://github.com/tkellen/node-interpret",
    "author": {
      "name": "Tyler Kellen",
      "url": "http://goingslowly.com/"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/tkellen/node-interpret.git"
    },
    "bugs": {
      "url": "https://github.com/tkellen/node-interpret/issues"
    },
    "license": "MIT",
    "main": "index.js",
    "keywords": [
      "cirru-script",
      "cjsx",
      "co",
      "coco",
      "coffee",
      "coffee-script",
      "coffee.md",
      "coffeescript",
      "csv",
      "earlgrey",
      "es",
      "es6",
      "iced",
      "iced.md",
      "iced-coffee-script",
      "ini",
      "js",
      "json",
      "json5",
      "jsx",
      "react",
      "litcoffee",
      "liticed",
      "ls",
      "livescript",
      "toml",
      "ts",
      "typescript",
      "wisp",
      "xml",
      "yaml",
      "yml"
    ],
    "_registry": "npm",
    "_loc": ".yarn-cache/v1/npm-interpret-1.0.4-820cdd588b868ffb191a809506d6c9c8f212b1b0/package.json",
    "readmeFilename": "README.md",
    "readme": "# interpret\n> A dictionary of file extensions and associated module loaders.\n\n[![NPM](https://nodei.co/npm/interpret.png)](https://nodei.co/npm/interpret/)\n\n## What is it\nThis is used by [Liftoff](http://github.com/tkellen/node-liftoff) to automatically require dependencies for configuration files, and by [rechoir](http://github.com/tkellen/node-rechoir) for registering module loaders.\n\n## API\n\n### extensions\nMap file types to modules which provide a [require.extensions] loader.\n\n```js\n{\n  '.babel.js': [\n    {\n      module: 'babel-register',\n      register: function (module) {\n        module({\n          // register on .js extension due to https://github.com/joyent/node/blob/v0.12.0/lib/module.js#L353\n          // which only captures the final extension (.babel.js -> .js)\n          extensions: '.js'\n        });\n      }\n    },\n    {\n      module: 'babel-core/register',\n      register: function (module) {\n        module({\n          extensions: '.js'\n        });\n      }\n    },\n    {\n      module: 'babel/register',\n      register: function (module) {\n        module({\n          extensions: '.js'\n        });\n      }\n    }\n  ],\n  '.buble.js': 'buble/register',\n  '.cirru': 'cirru-script/lib/register',\n  '.cjsx': 'node-cjsx/register',\n  '.co': 'coco',\n  '.coffee': ['coffeescript/register', 'coffee-script/register', 'coffeescript', 'coffee-script'],\n  '.coffee.md': ['coffeescript/register', 'coffee-script/register', 'coffeescript', 'coffee-script'],\n  '.csv': 'require-csv',\n  '.eg': 'earlgrey/register',\n  '.iced': ['iced-coffee-script/register', 'iced-coffee-script'],\n  '.iced.md': 'iced-coffee-script/register',\n  '.ini': 'require-ini',\n  '.js': null,\n  '.json': null,\n  '.json5': 'json5/lib/require',\n  '.jsx': [\n    {\n      module: 'babel-register',\n      register: function (module) {\n        module({\n          extensions: '.jsx'\n        });\n      }\n    },\n    {\n      module: 'babel-core/register',\n      register: function (module) {\n        module({\n          extensions: '.jsx'\n        });\n      }\n    },\n    {\n      module: 'babel/register',\n      register: function (module) {\n        module({\n          extensions: '.jsx'\n        });\n      },\n    },\n    {\n      module: 'node-jsx',\n      register: function (module) {\n        module.install({\n          extension: '.jsx',\n          harmony: true\n        });\n      }\n    }\n  ],\n  '.litcoffee': ['coffeescript/register', 'coffee-script/register', 'coffeescript', 'coffee-script'],\n  '.liticed': 'iced-coffee-script/register',\n  '.ls': ['livescript', 'LiveScript'],\n  '.node': null,\n  '.toml': {\n    module: 'toml-require',\n    register: function (module) {\n      module.install();\n    }\n  },\n  '.ts': ['ts-node/register', 'typescript-node/register', 'typescript-register', 'typescript-require'],\n  '.tsx': ['ts-node/register', 'typescript-node/register'],\n  '.wisp': 'wisp/engine/node',\n  '.xml': 'require-xml',\n  '.yaml': 'require-yaml',\n  '.yml': 'require-yaml'\n};\n```\n\n### jsVariants\nSame as above, but only include the extensions which are javascript variants.\n\n## How to use it\n\nConsumers should use the exported `extensions` or `jsVariants` object to determine which module should be loaded for a given extension. If a matching extension is found, consumers should do the following:\n\n1. If the value is null, do nothing.\n\n2. If the value is a string, try to require it.\n\n3. If the value is an object, try to require the `module` property. If successful, the `register` property (a function) should be called with the module passed as the first argument.\n\n4. If the value is an array, iterate over it, attempting step #2 or #3 until one of the attempts does not throw.\n\n[require.extensions]: http://nodejs.org/api/globals.html#globals_require_extensions\n",
    "licenseText": "Copyright (c) 2014 Tyler Kellen\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/interpret/-/interpret-1.0.4.tgz#820cdd588b868ffb191a809506d6c9c8f212b1b0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/interpret/-/interpret-1.0.4.tgz",
    "hash": "820cdd588b868ffb191a809506d6c9c8f212b1b0",
    "registry": "npm",
    "packageName": "interpret"
  },
  "registry": "npm",
  "hash": "820cdd588b868ffb191a809506d6c9c8f212b1b0"
}