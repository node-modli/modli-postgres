{
  "manifest": {
    "name": "eslint-import-resolver-node",
    "version": "0.2.3",
    "description": "Node default behavior import resolution plugin for eslint-plugin-import.",
    "main": "index.js",
    "scripts": {
      "test": "nyc mocha"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/benmosher/eslint-plugin-import"
    },
    "keywords": [
      "eslint",
      "eslintplugin",
      "esnext",
      "modules",
      "eslint-plugin-import"
    ],
    "author": {
      "name": "Ben Mosher",
      "url": "me@benmosher.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/benmosher/eslint-plugin-import/issues"
    },
    "homepage": "https://github.com/benmosher/eslint-plugin-import",
    "dependencies": {
      "debug": "^2.2.0",
      "object-assign": "^4.0.1",
      "resolve": "^1.1.6"
    },
    "devDependencies": {
      "chai": "^3.4.1",
      "mocha": "^2.3.4",
      "nyc": "^7.0.0"
    },
    "_registry": "npm",
    "_loc": ".yarn-cache/v1/npm-eslint-import-resolver-node-0.2.3-5add8106e8c928db2cba232bcd9efa846e3da16c/package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-import-resolver-node\n\n[![npm](https://img.shields.io/npm/v/eslint-import-resolver-node.svg)](https://www.npmjs.com/package/eslint-import-resolver-node)\n\nDefault Node-style module resolution plugin for [`eslint-plugin-import`](https://www.npmjs.com/package/eslint-plugin-import).\n\nPublished separately to allow pegging to a specific version in case of breaking\nchanges.\n\nConfig is passed directly through to [`resolve`](https://www.npmjs.com/package/resolve#resolve-sync-id-opts) as options:\n\n```yaml\nsettings:\n  import/resolver:\n    node:\n      extensions:\n        # if unset, default is just '.js', but it must be re-added explicitly if set\n        - .js\n        - .jsx\n        - .es6\n        - .coffee\n\n      paths:\n        # an array of absolute paths which will also be searched\n        # think NODE_PATH\n        - /usr/local/share/global_modules\n\n      # this is technically for identifying `node_modules` alternate names\n      moduleDirectory:\n\n        - node_modules # defaults to 'node_modules', but...\n        - bower_components\n\n        - project/src  # can add a path segment here that will act like\n                       # a source root, for in-project aliasing (i.e.\n                       # `import MyStore from 'stores/my-store'`)\n```\n\nor to use the default options:\n\n```yaml\nsettings:\n  import/resolver: node\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-import-resolver-node/-/eslint-import-resolver-node-0.2.3.tgz#5add8106e8c928db2cba232bcd9efa846e3da16c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-import-resolver-node/-/eslint-import-resolver-node-0.2.3.tgz",
    "hash": "5add8106e8c928db2cba232bcd9efa846e3da16c",
    "registry": "npm",
    "packageName": "eslint-import-resolver-node"
  },
  "registry": "npm",
  "hash": "5add8106e8c928db2cba232bcd9efa846e3da16c"
}