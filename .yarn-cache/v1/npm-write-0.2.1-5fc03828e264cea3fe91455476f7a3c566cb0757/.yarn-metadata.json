{
  "manifest": {
    "name": "write",
    "description": "Write files to disk, creating intermediate directories if they don't exist.",
    "version": "0.2.1",
    "homepage": "https://github.com/jonschlinkert/write",
    "author": {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/jonschlinkert/write.git"
    },
    "bugs": {
      "url": "https://github.com/jonschlinkert/write/issues"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "mocha"
    },
    "dependencies": {
      "mkdirp": "^0.5.1"
    },
    "devDependencies": {
      "async": "^1.4.0",
      "delete": "^0.2.1",
      "mocha": "^2.2.5",
      "should": "^7.0.2"
    },
    "keywords": [
      "file",
      "filepath",
      "files",
      "filesystem",
      "folder",
      "fs",
      "fs.writeFile",
      "fs.writeFileSync",
      "path",
      "write"
    ],
    "_registry": "npm",
    "_loc": ".yarn-cache/v1/npm-write-0.2.1-5fc03828e264cea3fe91455476f7a3c566cb0757/package.json",
    "readmeFilename": "README.md",
    "readme": "# write [![NPM version](https://badge.fury.io/js/write.svg)](http://badge.fury.io/js/write)  [![Build Status](https://travis-ci.org/jonschlinkert/write.svg)](https://travis-ci.org/jonschlinkert/write)\n\n> Write files to disk, creating intermediate directories if they don't exist.\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i write --save\n```\n\n## API docs\n\n### [writeFile](index.js#L32)\n\nAsynchronously write a file to disk. Creates any intermediate directories if they don't already exist.\n\n**Params**\n\n* `dest` **{String}**: Destination file path\n* `str` **{String}**: String to write to disk.\n* `callback` **{Function}**\n\n**Example**\n\n```js\nvar writeFile = require('write');\nwriteFile('foo.txt', 'This is content to write.', function(err) {\n  if (err) console.log(err);\n});\n```\n\n### [.writeFile.sync](index.js#L64)\n\nSynchronously write files to disk. Creates any intermediate directories if they don't already exist.\n\n**Params**\n\n* `dest` **{String}**: Destination file path\n* `str` **{String}**: String to write to disk.\n\n**Example**\n\n```js\nvar writeFile = require('write');\nwriteFile.sync('foo.txt', 'This is content to write.');\n```\n\n### [.writeFile.stream](index.js#L87)\n\nUses `fs.createWriteStream`, but also creates any intermediate directories if they don't already exist.\n\n**Params**\n\n* `dest` **{String}**: Destination file path\n* `returns` **{Stream}**: Returns a write stream.\n\n**Example**\n\n```js\nvar write = require('write');\nwrite.stream('foo.txt');\n```\n\n## Related\n\n* [delete](https://github.com/jonschlinkert/delete): Delete files and folders and any intermediate directories if they exist (sync and async).\n* [read-yaml](https://github.com/jonschlinkert/read-yaml): Very thin wrapper around js-yaml for directly reading in YAML files.\n* [read-json](https://github.com/azer/read-json): Reads and parses a JSON file.\n* [read-data](https://github.com/jonschlinkert/read-data): Read JSON or YAML files.\n* [write-yaml](https://github.com/jonschlinkert/write-yaml): Write YAML. Converts JSON to YAML writes it to the specified file.\n* [write-json](https://github.com/jonschlinkert/write-json): Write a JSON to file disk, also creates directories in the dest path if they… [more](https://github.com/jonschlinkert/write-json)\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/write/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on July 29, 2015._\n\n<!-- deps:mocha -->",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014-2015, Jon Schlinkert.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/write/-/write-0.2.1.tgz#5fc03828e264cea3fe91455476f7a3c566cb0757",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/write/-/write-0.2.1.tgz",
    "hash": "5fc03828e264cea3fe91455476f7a3c566cb0757",
    "registry": "npm",
    "packageName": "write"
  },
  "registry": "npm",
  "hash": "5fc03828e264cea3fe91455476f7a3c566cb0757"
}